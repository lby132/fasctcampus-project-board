debug: false
management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.fastcampus.projectboard: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  application.name: fastcampus-board
  cloud.vault:
    scheme: http
    authentication: token
    token: hvs.TLUyOH2OYphFgrrql1rVf7mH
  config.import: vault://
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_USERPASSWORD}
  #    driver-class-name: com.mysql.cj.jdbc.Driver # jdbc url 에 jdbc:postgresql 이런식으로 적혀있으면 자동으로 넣어줌
  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
  sql.init.mode: always
  data.rest:
    base-path: /api
    detection-strategy: annotated
  thymeleaf3.decoupled-logic: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
---

#spring:
#  config.activate.on-profile: testdb
#  datasource:
#    url: jdbc:h2:mem:boardcamp;mode=mysql
#    driverClassName: org.h2.Driver
#  sql.init.mode: always
#  test.database.replace: none
---

spring:
  config.activate.on-profile: heroku
  datasource:
    url: ${CLEARDB_DATABASE_URL}
  jpa.hibernate.ddl-auto: create
  sql.init.mode: always

---

sprig:
  config.activate.on-profile: test
  datasource.url: jdbc:h2:mem:testdb